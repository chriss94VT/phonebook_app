{"version":3,"sources":["Components/Notification.js","Services/login_service.js","Components/LoginForm.js","Hooks/useField.js","Components/Togglable.js","Services/entry_service.js","Components/PhonebookApp.js","index.js"],"names":["Notification","message","style","color","login","credentials","a","axios","post","response","data","checkStatus","token","get","LoginForm","username","type","useState","value","setValue","clearValue","onChange","event","target","useField","password","setPassword","setMessage","postLogin","preventDefault","LoginService","user","localStorage","setItem","window","location","reload","console","error","onClick","Togglable","React","forwardRef","props","ref","visible","setVisible","PropTypes","buttonLabel","func","isRequired","toggleVisibility","log","useImperativeHandle","children","baseURL","authStr","getItem","getAll","headers","Authorization","create","newPerson","update","id","updatedPerson","put","remove","delete","PhonebookApp","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","auth","setAuth","useEffect","loginService","getPersons","phoneService","entries","personList","map","person","name","toLowerCase","trim","includes","key","number","removeUser","handleAddPerson","personObj","forEach","match","answer","confirm","allUsers","newUser","concat","setTimeout","loginFormRef","createRef","onSubmit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.894a14cb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n\n  const style = {\n    color: \"black\",\n  }\n\n  return (\n    <>\n      <p style={style}>{message}</p>\n    </>\n  );\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/auth\";\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst checkStatus = async token => {\n  const response = await axios.get(`${baseUrl}/checkStatus?token=${token}`);\n  return response.data;\n}\n\nexport default {\n  login,\n  checkStatus\n};\n","import React, { useState } from \"react\";\nimport LoginService from \"../Services/login_service\";\nimport Notification from \"./Notification\";\nimport { useField } from \"../Hooks/useField\";\n\nconst LoginForm = () => {\n  //const [username, setUsername] = useState(\"\");\n  const username = useField(\"test\", \"username\");\n  const [password, setPassword] = useState(\"\");\n  //const password = useField('text', 'password');\n  const [message, setMessage] = useState(\"\");\n\n  // const handleUsernameChange = event => {\n  //   setUsername(event.target.value);\n  // };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const postLogin = async event => {\n    event.preventDefault();\n\n    const credentials = {\n      username,\n      password\n    };\n\n    try {\n      const user = await LoginService.login(credentials);\n      localStorage.setItem(\"token\", user.token);\n      //setUsername(\"\");\n      username.clearValue();\n      setPassword(\"\");\n      // password.setValue(\"\");\n      setMessage(\"Log in Successful\");\n      window.location.reload();\n    } catch (error) {\n      setMessage(\"Failed to Log In\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Login</h2>\n        <Notification message={message} />\n        <form>\n          username:{\" \"}\n          <input\n            onChange={username.onChange}\n            value={username.value}\n            type=\"text\"\n          ></input>\n          <br />\n          password:{\" \"}\n          <input\n            onChange={handlePasswordChange}\n            value={password}\n            type=\"password\"\n          ></input>\n          <br />\n          <input onClick={postLogin} value=\"Login\" type=\"submit\"></input>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nexport const useField = type => {\n  const [value, setValue] = useState(\"\");\n\n  const clearValue = () => {\n    setValue(\"\");\n  };\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  return {\n    type,\n    value,\n    clearValue,\n    setValue,\n    onChange\n  };\n};\n","import React, { useState, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  Togglable.PropTypes = {\n    buttonLabel:  PropTypes.func.isRequired\n  }\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n    console.log(visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return (\n    <div>\n      <div>{visible ? props.children : null}</div>\n      <div>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n    </div>\n  );\n});\n\nexport default Togglable;\n","import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\nconst authStr = `Bearer ${localStorage.getItem(\"token\")}`;\n\nconst getAll = async () => {\n  const response = await axios.get(baseURL, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst create = async newPerson => {\n  const response = await axios.post(baseURL, newPerson, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst update = async (id, updatedPerson) => {\n  const response = await axios.put(`${baseURL}/${id}`, updatedPerson, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseURL}/${id}`, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n};\n","import React, { useState, useEffect } from \"react\";\nimport Notification from \"./Notification\";\nimport LoginForm from \"../Components/LoginForm\";\nimport Togglable from \"../Components/Togglable\";\nimport phoneService from \"../Services/entry_service\";\nimport loginService from \"../Services/login_service\";\n\nconst PhonebookApp = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [auth, setAuth] = useState(false);\n\n  useEffect(async () => {\n    try {\n      const response = await loginService.checkStatus(\n        window.localStorage.getItem(\"token\")\n      );\n      setAuth(response);\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  const getPersons = async () => {\n    try {\n      const entries = await phoneService.getAll();\n      setPersons(entries);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(getPersons, []);\n\n  const personList = persons.map(person => {\n    if (\n      person.name\n        .toLowerCase()\n        .trim()\n        .includes(newFilter.toLowerCase().trim())\n    ) {\n      return (\n        <div key={person.name}>\n          <p>\n            {person.name} {person.number}\n          </p>\n          <button onClick={() => removeUser(person)}>delete</button>\n        </div>\n      );\n    }\n  });\n\n  const handleAddPerson = async event => {\n    event.preventDefault();\n    // loginFormRef.current.toggleVisibility();\n    let match;\n    let answer;\n\n    const personObj = {\n      name: newName,\n      number: newNumber\n    };\n\n    persons.forEach(async person => {\n      if (person.name.toLowerCase().trim() === newName.toLowerCase().trim()) {\n        match = true;\n        answer = window.confirm(\n          `${newName} has already been added to the phonebook, would you like to replace the number?`\n        );\n        try {\n          if (answer) {\n            await phoneService.update(person.id, personObj);\n            const allUsers = await phoneService.getAll();\n            setPersons(allUsers);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          }\n        } catch (error) {\n          console.error(error.message);\n        }\n      }\n    });\n\n    if (!match) {\n      try {\n        const newUser = await phoneService.create(personObj);\n        setPersons(persons.concat(newUser));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const removeUser = async person => {\n    try {\n      await phoneService.remove(person.id);\n      const allUsers = await phoneService.getAll();\n      setPersons(allUsers);\n    } catch (error) {\n      setMessage(\n        `Information for ${person.name} has already been removed from the server.`\n      );\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  const loginFormRef = React.createRef();\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Togglable buttonLabel=\"Show Log In\" ref={loginFormRef}>\n        <LoginForm />\n      </Togglable>\n      <div>\n        {auth ? (\n          <div>\n            <Notification message={message} />\n            <div>\n              filter shown with{\" \"}\n              <input onChange={handleFilterChange} value={newFilter} />\n            </div>\n            <div>\n              <Togglable buttonLabel='New Entry'>\n                <h2>Add New Number</h2>\n                <form onSubmit={handleAddPerson}>\n                  <div>\n                  name: <input onChange={handlePersonChange} value={newName} />\n                  </div>\n                  <div>\n                  number:{\" \"}\n                    <input onChange={handleNumberChange} value={newNumber} />\n                  </div>\n                  <div>\n                    <button type=\"submit\">add</button>\n                  </div>\n                </form>\n              </Togglable>\n            </div>\n            <h2>Numbers</h2>\n            <div>{personList}</div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default PhonebookApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport PhonebookApp from \"./Components/PhonebookApp\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PhonebookApp />, document.getElementById(\"root\"));"],"sourceRoot":""}