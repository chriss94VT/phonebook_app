{"version":3,"sources":["Components/Notification.js","Services/login_service.js","Components/LoginForm.js","Components/Togglable.js","Services/entry_service.js","Components/PhonebookApp.js","index.js"],"names":["Notification","message","style","color","login","credentials","a","axios","post","response","data","checkStatus","token","get","LoginForm","props","useState","username","setUsername","password","setPassword","setMessage","display","postLogin","event","preventDefault","LoginService","user","localStorage","setItem","window","location","reload","console","error","onChange","target","value","type","onClick","Togglable","React","forwardRef","ref","visible","setVisible","toggleVisibility","log","useImperativeHandle","children","buttonLabel","baseURL","authStr","getItem","getAll","headers","Authorization","create","newPerson","update","id","updatedPerson","put","remove","delete","PhonebookApp","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","auth","setAuth","useEffect","loginService","getPersons","phoneService","entries","personList","map","person","name","toLowerCase","trim","includes","key","number","removeUser","handleAddPerson","loginFormRef","current","personObj","forEach","match","answer","confirm","allUsers","newUser","concat","setTimeout","createRef","onSubmit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34121d1e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n\n    const style = {\n        color: 'black',\n    }\n\n  return (\n    <>\n      <p style={style}>{message}</p>\n    </>\n  );\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = '/api/auth';\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst checkStatus = async token => {\n  const response = await axios.get(`${baseUrl}/checkStatus?token=${token}`);\n  return response.data;\n}\n\nexport default {\n  login,\n  checkStatus\n};\n","import React, { useState, useEffect } from \"react\";\nimport LoginService from \"../Services/login_service\";\nimport Notification from \"./Notification\";\n\nconst LoginForm = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n const [message, setMessage] = useState(\"\");\n  const [display, setDisplay] = useState(false);\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const postLogin = async event => {\n    event.preventDefault();\n\n    const credentials = {\n      username,\n      password\n    };\n\n    try {\n      const user = await LoginService.login(credentials);\n      localStorage.setItem(\"token\", user.token);\n      setUsername(\"\");\n      setPassword(\"\");\n      setMessage(\"Log in Successful\");\n      window.location.reload();\n    } catch (error) {\n      setMessage(\"Failed to Log In\");\n      console.error(error);\n    }\n  };\n\n  const setDisplayTrue = event => {\n    setDisplay(true);\n  };\n\n  const setDisplayFalse = event => {\n    setDisplay(false);\n  }\n\n  return (\n    <>\n      {display ? (\n        <div>\n          <h2>Login</h2>\n          <Notification message={message} />\n          <form>\n            username:{\" \"}\n            <input\n              onChange={handleUsernameChange}\n              value={username}\n              type=\"text\"\n            ></input>\n            <br />\n            password:{\" \"}\n            <input\n              onChange={handlePasswordChange}\n              value={password}\n              type=\"password\"\n            ></input>\n            <br />\n            <input onClick={postLogin} value=\"Login\" type=\"submit\"></input>\n          </form>\n        </div>\n      ) : null}\n      \n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useImperativeHandle } from \"react\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n    console.log(visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return (\n    <div>\n      <div>{props.children}</div>\n      <div>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n    </div>\n  );\n});\n\nexport default Togglable;\n","import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\nconst authStr = `Bearer ${localStorage.getItem(\"token\")}`;\n\nconst getAll = async () => {\n  const response = await axios.get(baseURL, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst create = async newPerson => {\n  const response = await axios.post(baseURL, newPerson, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst update = async (id, updatedPerson) => {\n  const response = await axios.put(`${baseURL}/${id}`, updatedPerson, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseURL}/${id}`, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n};\n","import React, { useState, useEffect } from \"react\";\nimport Notification from \"./Notification\";\nimport LoginForm from \"../Components/LoginForm\";\nimport Togglable from \"../Components/Togglable\";\nimport phoneService from \"../Services/entry_service\";\nimport loginService from \"../Services/login_service\";\n\nconst PhonebookApp = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [auth, setAuth] = useState(false);\n\n  useEffect(async () => {\n    try {\n      const response = await loginService.checkStatus(\n        window.localStorage.getItem(\"token\")\n      );\n      setAuth(response);\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  const getPersons = async () => {\n    try {\n      const entries = await phoneService.getAll();\n      setPersons(entries);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(getPersons, []);\n\n  const personList = persons.map(person => {\n    if (\n      person.name\n        .toLowerCase()\n        .trim()\n        .includes(newFilter.toLowerCase().trim())\n    ) {\n      return (\n        <div key={person.name}>\n          <p>\n            {person.name} {person.number}\n          </p>\n          <button onClick={() => removeUser(person)}>delete</button>\n        </div>\n      );\n    }\n  });\n\n  const handleAddPerson = async event => {\n    event.preventDefault();\n    loginFormRef.current.toggleVisibility();\n    let match;\n    let answer;\n\n    const personObj = {\n      name: newName,\n      number: newNumber\n    };\n\n    persons.forEach(async person => {\n      if (person.name.toLowerCase().trim() === newName.toLowerCase().trim()) {\n        match = true;\n        answer = window.confirm(\n          `${newName} has already been added to the phonebook, would you like to replace the number?`\n        );\n        try {\n          if (answer) {\n            await phoneService.update(person.id, personObj);\n            const allUsers = await phoneService.getAll();\n            setPersons(allUsers);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          }\n        } catch (error) {\n          console.error(error.message);\n        }\n      }\n    });\n\n    if (!match) {\n      try {\n        const newUser = await phoneService.create(personObj);\n        setPersons(persons.concat(newUser));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const removeUser = async person => {\n    try {\n      await phoneService.remove(person.id);\n      const allUsers = await phoneService.getAll();\n      setPersons(allUsers);\n    } catch (error) {\n      setMessage(\n        `Information for ${person.name} has already been removed from the server.`\n      );\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  const loginFormRef = React.createRef();\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Togglable buttonLabel=\"Show Log In\" ref={loginFormRef}>\n        <LoginForm />\n      </Togglable>\n      <div>\n        {auth ? (\n          <div>\n            <Notification message={message} />\n            <div>\n              filter shown with{\" \"}\n              <input onChange={handleFilterChange} value={newFilter} />\n            </div>\n            <div>\n              <h2>Add New Number</h2>\n              <form onSubmit={handleAddPerson}>\n                <div>\n                  name: <input onChange={handlePersonChange} value={newName} />\n                </div>\n                <div>\n                  number:{\" \"}\n                  <input onChange={handleNumberChange} value={newNumber} />\n                </div>\n                <div>\n                  <button type=\"submit\">add</button>\n                </div>\n              </form>\n            </div>\n            <h2>Numbers</h2>\n            <div>{personList}</div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default PhonebookApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhonebookApp from './Components/PhonebookApp';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PhonebookApp />, document.getElementById('root'));;"],"sourceRoot":""}