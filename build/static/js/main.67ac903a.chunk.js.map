{"version":3,"sources":["Components/Notification.js","Services/entry_service.js","Components/PhonebookApp.js","index.js"],"names":["Notification","message","style","color","baseURL","axios","get","then","res","data","newPerson","post","id","delete","updatedPerson","put","PhonebookApp","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setMessage","useEffect","phoneService","personList","map","person","name","toLowerCase","trim","includes","key","number","onClick","removeUser","catch","onChange","event","target","value","onSubmit","match","preventDefault","personObj","forEach","window","confirm","concat","setTimeout","type","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAMtB,OACE,oCACE,uBAAGC,MANS,CACVC,MAAO,UAKSF,K,gBCRlBG,EAAU,eAsBD,EApBA,WAEb,OADiBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAkBnB,EAfA,SAAAC,GAEb,OADiBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAanB,EALA,SAAAG,GAEb,OADiBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAGnB,EAVA,SAACG,EAAIE,GAElB,OADiBT,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAME,GAC/BP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCuHnBO,EAnIM,WAAO,IAAD,EACKC,mBAAS,IADd,mBAClBC,EADkB,KACTC,EADS,OAEKF,mBAAS,IAFd,mBAElBG,EAFkB,KAETC,EAFS,OAGSJ,mBAAS,IAHlB,mBAGlBK,EAHkB,KAGPC,EAHO,OAISN,mBAAS,IAJlB,mBAIlBO,EAJkB,KAIPC,EAJO,OAKUR,mBAAS,IALnB,mBAKlBS,EALkB,KAKJC,EALI,KAazBC,qBANmB,WACjBC,IAAsBtB,MAAK,SAAAC,GACzBW,EAAWX,QAIO,IAEtB,IAAMsB,EAAaZ,EAAQa,KAAI,SAAAC,GAC7B,GACEA,EAAOC,KACJC,cACAC,OACAC,SAASZ,EAAUU,cAAcC,QAEpC,OACE,yBAAKE,IAAKL,EAAOC,MACf,2BACGD,EAAOC,KADV,IACiBD,EAAOM,QAExB,4BAAQC,QAAS,kBAAMC,EAAWR,KAAlC,cA6DFQ,EAAa,SAAAR,GACjBH,EACUG,EAAOpB,IACdL,MAAK,SAAAC,GACJqB,IAAsBtB,MAAK,SAAAC,GACzBW,EAAWX,SAGdiC,OAAM,SAAAjC,GACLmB,EAAW,mBAAD,OACWK,EAAOC,KADlB,mDAMhB,OACE,6BACE,yCACA,kBAAC,EAAD,CAAchC,QAASyB,IACvB,iDACoB,IAClB,2BAAOgB,SAzBc,SAAAC,GACzBlB,EAAakB,EAAMC,OAAOC,QAwBeA,MAAOrB,KAE9C,6BACE,8CACA,0BAAMsB,SAhFY,SAAAH,GAEtB,IAAII,EADJJ,EAAMK,iBAIN,IAAMC,EAAY,CAChBhB,KAAMb,EACNkB,OAAQhB,GAGVJ,EAAQgC,SAAQ,SAAAlB,GACVA,EAAOC,KAAKC,cAAcC,SAAWf,EAAQc,cAAcC,SAC7DY,GAAQ,EACCI,OAAOC,QAAP,UACJhC,EADI,qFAKPS,EAAoBG,EAAOpB,GAAIqC,GAAW1C,MAAK,SAAAC,GAC7CqB,IAAsBtB,MAAK,SAAAC,GACzBW,EAAWX,MAEba,EAAW,IACXE,EAAa,WAMhBwB,GACHlB,EAAoBoB,GAAW1C,MAAK,SAAAC,GAClCW,EAAWD,EAAQmC,OAAO7C,IAC1BmB,EAAW,SAAD,OAAUP,IACpBC,EAAW,IACXE,EAAa,IAEb+B,YAAW,WACT3B,EAAW,QACV,UA2CD,sCACQ,2BAAOe,SAvCI,SAAAC,GACzBtB,EAAWsB,EAAMC,OAAOC,QAsC2BA,MAAOzB,KAEpD,wCACU,2BAAOsB,SAtCE,SAAAC,GACzBpB,EAAaoB,EAAMC,OAAOC,QAqC2BA,MAAOvB,KAEtD,6BACE,4BAAQiC,KAAK,UAAb,UAIN,uCACA,6BAAMzB,KC5HZ0B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.67ac903a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n\n    const style = {\n        color: 'green',\n    }\n\n  return (\n    <>\n      <p style={style}>{message}</p>\n    </>\n  );\n};\n\nexport default Notification;\n","import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\n\nconst getAll = () => {\n  const response = axios.get(baseURL);\n  return response.then(res => res.data);\n};\n\nconst create = newPerson => {\n  const response = axios.post(baseURL, newPerson);\n  return response.then(res => res.data);\n};\n\nconst update = (id, updatedPerson) => {\n  const response = axios.put(`${baseURL}/${id}`, updatedPerson);\n  return response.then(res => res.data);\n};\n\nconst remove = id => {\n  const response = axios.delete(`${baseURL}/${id}`);\n  return response.then(res => res.data);\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n};","import React, { useState, useEffect } from \"react\";\nimport Notification from \"./Notification\";\nimport phoneService from \"../Services/entry_service\";\n\nconst PhonebookApp = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [errorMessage, setMessage] = useState(\"\");\n\n  const getPersons = () => {\n    phoneService.getAll().then(res => {\n      setPersons(res);\n    });\n  };\n\n  useEffect(getPersons, []);\n\n  const personList = persons.map(person => {\n    if (\n      person.name\n        .toLowerCase()\n        .trim()\n        .includes(newFilter.toLowerCase().trim())\n    ) {\n      return (\n        <div key={person.name}>\n          <p>\n            {person.name} {person.number}\n          </p>\n          <button onClick={() => removeUser(person)}>delete</button>\n        </div>\n      );\n    }\n  });\n\n  const handleAddPerson = event => {\n    event.preventDefault();\n    let match;\n    let answer;\n\n    const personObj = {\n      name: newName,\n      number: newNumber\n    };\n\n    persons.forEach(person => {\n      if (person.name.toLowerCase().trim() === newName.toLowerCase().trim()) {\n        match = true;\n        answer = window.confirm(\n          `${newName} has already been added to the phonebook, would you like to replace the number?`\n        );\n\n        if (answer) {\n          phoneService.update(person.id, personObj).then(res => {\n            phoneService.getAll().then(res => {\n              setPersons(res);\n            });\n            setNewName(\"\");\n            setNewNumber(\"\");\n          });\n        }\n      }\n    });\n\n    if (!match) {\n      phoneService.create(personObj).then(res => {\n        setPersons(persons.concat(res));\n        setMessage(`Added ${newName}`);\n        setNewName(\"\");\n        setNewNumber(\"\");\n\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const removeUser = person => {\n    phoneService\n      .remove(person.id)\n      .then(res => {\n        phoneService.getAll().then(res => {\n          setPersons(res);\n        });\n      })\n      .catch(res => {\n        setMessage(\n          `Information for ${person.name} has already been removed from the server.`\n        );\n      });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <div>\n        filter shown with{\" \"}\n        <input onChange={handleFilterChange} value={newFilter} />\n      </div>\n      <div>\n        <h2>Add New Number</h2>\n        <form onSubmit={handleAddPerson}>\n          <div>\n            name: <input onChange={handlePersonChange} value={newName} />\n          </div>\n          <div>\n            number: <input onChange={handleNumberChange} value={newNumber} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n      <h2>Numbers</h2>\n      <div>{personList}</div>\n    </div>\n  );\n};\n\nexport default PhonebookApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhonebookApp from './Components/PhonebookApp';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PhonebookApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}