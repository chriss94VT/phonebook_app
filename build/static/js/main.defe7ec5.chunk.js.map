{"version":3,"sources":["Components/Notification.js","Services/login_service.js","Components/LoginForm.js","Services/entry_service.js","Components/PhonebookApp.js","index.js"],"names":["Notification","message","style","color","login","credentials","a","axios","post","response","data","LoginForm","useState","username","setUsername","password","setPassword","setUser","setMessage","postLogin","event","preventDefault","LoginService","user","localStorage","setItem","token","window","location","reload","console","error","onChange","target","value","type","onClick","baseURL","authStr","getItem","getAll","get","headers","Authorization","create","newPerson","update","id","updatedPerson","put","remove","delete","PhonebookApp","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","auth","setAuth","getPersons","phoneService","entries","useEffect","personList","map","person","name","toLowerCase","trim","includes","key","number","removeUser","handleAddPerson","personObj","forEach","match","answer","confirm","allUsers","newUser","concat","setTimeout","onSubmit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.defe7ec5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n\n    const style = {\n        color: 'black',\n    }\n\n  return (\n    <>\n      <p style={style}>{message}</p>\n    </>\n  );\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/login\";\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default {\n  login\n};\n","import React, { useState, useEffect } from \"react\";\nimport LoginService from \"../Services/login_service\";\nimport Notification from './Notification';\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const postLogin = async event => {\n    event.preventDefault();\n\n    const credentials = {\n      username,\n      password\n    };\n\n    try {\n      const user = await LoginService.login(credentials);\n      localStorage.setItem('token', user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n      setMessage(\"Log in Successful\");\n      window.location.reload();\n    } catch (error) {\n      setMessage(\"Failed to Log In\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n    <h2>Log in to access the phonebook</h2>\n    <Notification message={message} />\n      <form>\n        username:{\" \"}\n        <input\n          onChange={handleUsernameChange}\n          value={username}\n          type=\"text\"\n        ></input>\n        <br />\n        password:{\" \"}\n        <input\n          onChange={handlePasswordChange}\n          value={password}\n          type=\"password\"\n        ></input>\n        <br />\n        <input onClick={postLogin} value=\"Login\" type=\"submit\"></input>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\nconst authStr = `Bearer ${localStorage.getItem(\"token\")}`;\n\nconst getAll = async () => {\n  const response = await axios.get(baseURL, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst create = async newPerson => {\n  const response = await axios.post(baseURL, newPerson, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst update = async (id, updatedPerson) => {\n  const response = await axios.put(`${baseURL}/${id}`, updatedPerson, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseURL}/${id}`, {\n    headers: { Authorization: authStr }\n  });\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n};\n","import React, { useState, useEffect } from \"react\";\nimport Notification from \"./Notification\";\nimport LoginForm from \"./LoginForm\";\nimport phoneService from \"../Services/entry_service\";\n\nconst PhonebookApp = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [auth, setAuth] = useState(false);\n\n  const getPersons = async () => {\n    try {\n      const entries = await phoneService.getAll();\n      setPersons(entries);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(getPersons, []);\n\n  useEffect(async () => {\n    try {\n      await phoneService.getAll();\n      setAuth(true);\n    } catch (error) {\n      setAuth(false);\n    }\n  }, []);\n\n  const personList = persons.map(person => {\n    if (\n      person.name\n        .toLowerCase()\n        .trim()\n        .includes(newFilter.toLowerCase().trim())\n    ) {\n      return (\n        <div key={person.name}>\n          <p>\n            {person.name} {person.number}\n          </p>\n          <button onClick={() => removeUser(person)}>delete</button>\n        </div>\n      );\n    }\n  });\n\n  const handleAddPerson = async event => {\n    event.preventDefault();\n    let match;\n    let answer;\n\n    const personObj = {\n      name: newName,\n      number: newNumber\n    };\n\n    persons.forEach(async person => {\n      if (person.name.toLowerCase().trim() === newName.toLowerCase().trim()) {\n        match = true;\n        answer = window.confirm(\n          `${newName} has already been added to the phonebook, would you like to replace the number?`\n        );\n        try {\n          if (answer) {\n            await phoneService.update(person.id, personObj);\n            const allUsers = await phoneService.getAll();\n            setPersons(allUsers);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          }\n        } catch (error) {\n          console.error(error.message);\n        }\n      }\n    });\n\n    if (!match) {\n      try {\n        const newUser = await phoneService.create(personObj);\n        setPersons(persons.concat(newUser));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const removeUser = async person => {\n    try {\n      await phoneService.remove(person.id);\n      const allUsers = await phoneService.getAll();\n      setPersons(allUsers);\n    } catch (error) {\n      setMessage(\n        `Information for ${person.name} has already been removed from the server.`\n      );\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      {auth ? null : <LoginForm />}\n      {auth ? (\n        <div>\n          <h2>Phonebook</h2>\n          <Notification message={message} />\n          <div>\n            filter shown with{\" \"}\n            <input onChange={handleFilterChange} value={newFilter} />\n          </div>\n          <div>\n            <h2>Add New Number</h2>\n            <form onSubmit={handleAddPerson}>\n              <div>\n                name: <input onChange={handlePersonChange} value={newName} />\n              </div>\n              <div>\n                number:{\" \"}\n                <input onChange={handleNumberChange} value={newNumber} />\n              </div>\n              <div>\n                <button type=\"submit\">add</button>\n              </div>\n            </form>\n          </div>\n          <h2>Numbers</h2>\n          <div>{personList}</div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PhonebookApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhonebookApp from './Components/PhonebookApp';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PhonebookApp />, document.getElementById('root'));;"],"sourceRoot":""}